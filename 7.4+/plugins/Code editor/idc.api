idc.AddSeg(startea, endea, base, use32, align, comb)
idc.AutoMark(ea, qtype)
idc.EVAL_FAILURE(code)
idc.FindBinary(ea, flag, searchstr, radix)
idc.FindText(ea, flag, y, x, text)
idc.GetDisasm(ea)
idc.GetDouble(ea)
idc.GetFloat(ea)
idc.GetLocalType(ordinal, flags)
idc.GetProcessorName()
idc.LoadFile(filepath, pos, ea, size)
idc.MakeFunction(start, end)
idc.MakeStr(ea, endea)
idc.MakeVar(ea)
idc.SaveFile(filepath, pos, ea, size)
idc.SegEnd(ea)
idc.SegStart(ea)
idc.SetPrcsr(processor)
idc.SetSegmentType(ea, type)
idc.SetType(ea, newtype)
idc.SizeOf(typestr)
idc.add_auto_stkpnt(func_ea, ea, delta)
idc.add_default_til(name)
idc.add_enum(idx, name, flag)
idc.add_enum_member(enum_id, name, value, bmask)
idc.add_segm_ex(startea, endea, base, use32, align, comb, flags)
idc.add_struc(index, name, is_union)
idc.add_struc_member(sid, name, offset, flag, typeid, nbytes, target, tdelta, reftype)
idc.append_func_tail(funcea, ea1, ea2)
idc.apply_type(ea, py_type, flags)
idc.atoa(ea)
idc.atol(s)
idc.batch(batch)
idc.byte_value(F)
idc.call_system(command)
idc.can_exc_continue()
idc.choose_func(title)
idc.clear_trace(filename)
idc.create_array(name)
idc.create_byte(ea)
idc.create_double(ea)
idc.create_dword(ea)
idc.create_float(ea)
idc.create_oword(ea)
idc.create_pack_real(ea)
idc.create_qword(ea)
idc.create_strlit(ea, endea)
idc.create_struct(ea, size, strname)
idc.create_tbyte(ea)
idc.create_word(ea)
idc.create_yword(ea)
idc.define_local_var(start, end, location, name)
idc.del_array_element(tag, array_id, idx)
idc.del_enum_member(enum_id, value, serial, bmask)
idc.del_hash_string(hash_id, key)
idc.del_stkpnt(func_ea, ea)
idc.del_struc(sid)
idc.del_struc_member(sid, member_offset)
idc.delete_all_segments()
idc.delete_array(array_id)
idc.demangle_name(name, disable_mask)
idc.enable_tracing(trace_level, enable)
idc.eval_idc(expr)
idc.expand_struc(sid, offset, delta, recalc)
idc.fclose(handle)
idc.fgetc(handle)
idc.filelength(handle)
idc.find_binary(ea, flag, searchstr, radix, from_bc695)
idc.find_func_end(ea)
idc.find_selector(val)
idc.find_text(ea, flag, y, x, searchstr, from_bc695)
idc.first_func_chunk(funcea)
idc.fopen(f, mode)
idc.force_bl_call(ea)
idc.force_bl_jump(ea)
idc.form(format, *args)
idc.fprintf(handle, format, *args)
idc.fputc(byte, handle)
idc.fseek(handle, offset, origin)
idc.ftell(handle)
idc.func_contains(func_ea, ea)
idc.gen_file(filetype, path, ea1, ea2, flags)
idc.gen_flow_graph(outfile, title, ea1, ea2, flags)
idc.gen_simple_call_chart(outfile, title, flags)
idc.generate_disasm_line(ea, flags)
idc.get_array_element(tag, array_id, idx)
idc.get_array_id(name)
idc.get_bmask_cmt(enum_id, bmask, repeatable)
idc.get_bmask_name(enum_id, bmask)
idc.get_bpt_attr(ea, bptattr)
idc.get_bpt_ea(n)
idc.get_bytes(ea, size, use_dbg)
idc.get_color(ea, what)
idc.get_curline()
idc.get_enum_member(enum_id, value, serial, bmask)
idc.get_enum_member_cmt(const_id, repeatable)
idc.get_enum_member_name(const_id)
idc.get_event_bpt_hea()
idc.get_event_ea()
idc.get_event_exc_code()
idc.get_event_exc_ea()
idc.get_event_exc_info()
idc.get_event_exit_code()
idc.get_event_id()
idc.get_event_info()
idc.get_event_module_base()
idc.get_event_module_name()
idc.get_event_module_size()
idc.get_event_pid()
idc.get_event_tid()
idc.get_fchunk_attr(ea, attr)
idc.get_first_enum_member(enum_id, bmask)
idc.get_first_hash_key(hash_id)
idc.get_first_index(tag, array_id)
idc.get_first_member(sid)
idc.get_first_module()
idc.get_first_seg()
idc.get_fixup_target_dis(ea)
idc.get_fixup_target_flags(ea)
idc.get_fixup_target_off(ea)
idc.get_fixup_target_sel(ea)
idc.get_fixup_target_type(ea)
idc.get_frame_args_size(ea)
idc.get_frame_id(ea)
idc.get_frame_lvar_size(ea)
idc.get_frame_regs_size(ea)
idc.get_frame_size(ea)
idc.get_func_attr(ea, attr)
idc.get_func_cmt(ea, repeatable)
idc.get_func_flags(ea)
idc.get_func_name(ea)
idc.get_func_off_str(ea)
idc.get_hash_long(hash_id, key)
idc.get_hash_string(hash_id, key)
idc.get_idb_path()
idc.get_inf_attr(attr)
idc.get_item_size(ea)
idc.get_last_enum_member(enum_id, bmask)
idc.get_last_hash_key(hash_id)
idc.get_last_index(tag, array_id)
idc.get_last_member(sid)
idc.get_local_tinfo(ordinal)
idc.get_member_cmt(sid, member_offset, repeatable)
idc.get_member_flag(sid, member_offset)
idc.get_member_id(sid, member_offset)
idc.get_member_name(sid, member_offset)
idc.get_member_offset(sid, member_name)
idc.get_member_qty(sid)
idc.get_member_size(sid, member_offset)
idc.get_member_strid(sid, member_offset)
idc.get_min_spd_ea(func_ea)
idc.get_module_name(base)
idc.get_module_size(base)
idc.get_name(ea, gtn_flags)
idc.get_name_ea_simple(name)
idc.get_next_enum_member(enum_id, value, bmask)
idc.get_next_fchunk(ea)
idc.get_next_func(ea)
idc.get_next_hash_key(hash_id, key)
idc.get_next_index(tag, array_id, idx)
idc.get_next_module(base)
idc.get_next_offset(sid, offset)
idc.get_next_seg(ea)
idc.get_numbered_type_name(ordinal)
idc.get_operand_type(ea, n)
idc.get_operand_value(ea, n)
idc.get_ordinal_qty()
idc.get_prev_enum_member(enum_id, value, bmask)
idc.get_prev_fchunk(ea)
idc.get_prev_func(ea)
idc.get_prev_hash_key(hash_id, key)
idc.get_prev_index(tag, array_id, idx)
idc.get_prev_offset(sid, offset)
idc.get_reg_value(name)
idc.get_segm_attr(segea, attr)
idc.get_segm_by_sel(base)
idc.get_segm_end(ea)
idc.get_segm_name(ea)
idc.get_segm_start(ea)
idc.get_sp_delta(ea)
idc.get_spd(ea)
idc.get_sreg(ea, reg)
idc.get_str_type(ea)
idc.get_strlit_contents(ea, length, strtype)
idc.get_tinfo(ea)
idc.get_type(ea)
idc.get_xref_type()
idc.guess_type(ea)
idc.hasName(F)
idc.hasUserName(F)
idc.has_value(F)
idc.here()
idc.idadir()
idc.import_type(idx, type_name)
idc.isBin0(F)
idc.isBin1(F)
idc.isDec0(F)
idc.isDec1(F)
idc.isExtra(F)
idc.isHex0(F)
idc.isHex1(F)
idc.isOct0(F)
idc.isOct1(F)
idc.isRef(F)
idc.is_align(F)
idc.is_byte(F)
idc.is_char0(F)
idc.is_char1(F)
idc.is_code(F)
idc.is_data(F)
idc.is_defarg0(F)
idc.is_defarg1(F)
idc.is_double(F)
idc.is_dword(F)
idc.is_enum0(F)
idc.is_enum1(F)
idc.is_event_handled()
idc.is_float(F)
idc.is_flow(F)
idc.is_head(F)
idc.is_loaded(ea)
idc.is_manual0(F)
idc.is_manual1(F)
idc.is_mapped(ea)
idc.is_off0(F)
idc.is_off1(F)
idc.is_oword(F)
idc.is_pack_real(F)
idc.is_qword(F)
idc.is_seg0(F)
idc.is_seg1(F)
idc.is_stkvar0(F)
idc.is_stkvar1(F)
idc.is_strlit(F)
idc.is_stroff0(F)
idc.is_stroff1(F)
idc.is_struct(F)
idc.is_tail(F)
idc.is_tbyte(F)
idc.is_union(sid)
idc.is_unknown(F)
idc.is_word(F)
idc.loadfile(filepath, pos, ea, size)
idc.ltoa(n, radix)
idc.make_array(ea, nitems)
idc.move_segm(ea, to, flags)
idc.next_func_chunk(funcea, tailea)
idc.next_head(ea, maxea)
idc.op_offset_high16(ea, n, target)
idc.op_plain_offset(ea, n, base)
idc.op_stroff(ea, n, strid, delta)
idc.parse_decl(inputtype, flags)
idc.parse_decls(inputtype, flags)
idc.plan_and_wait(sEA, eEA, final_pass)
idc.prev_head(ea, minea)
idc.print_decls(ordinals, flags)
idc.print_insn_mnem(ea)
idc.print_operand(ea, n)
idc.process_config_line(directive)
idc.process_ui_action(name, flags)
idc.qsleep(milliseconds)
idc.read_dbg_byte(ea)
idc.read_dbg_dword(ea)
idc.read_dbg_qword(ea)
idc.read_dbg_word(ea)
idc.read_selection_end()
idc.read_selection_start()
idc.readlong(handle, mostfirst)
idc.readshort(handle, mostfirst)
idc.readstr(handle)
idc.remove_fchunk(funcea, tailea)
idc.rename_array(array_id, newname)
idc.resume_process()
idc.rotate_byte(x, count)
idc.rotate_dword(x, count)
idc.rotate_left(value, count, nbits, offset)
idc.rotate_word(x, count)
idc.save_database(idbname, flags)
idc.savefile(filepath, pos, ea, size)
idc.sel2para(sel)
idc.selector_by_name(segname)
idc.send_dbg_command(cmd)
idc.set_array_long(array_id, idx, value)
idc.set_array_params(ea, flags, litems, align)
idc.set_array_string(array_id, idx, value)
idc.set_bmask_cmt(enum_id, bmask, cmt, repeatable)
idc.set_bmask_name(enum_id, bmask, name)
idc.set_bpt_attr(address, bptattr, value)
idc.set_bpt_cond(ea, cnd, is_lowcnd)
idc.set_color(ea, what, color)
idc.set_default_sreg_value(ea, reg, value)
idc.set_fchunk_attr(ea, attr, value)
idc.set_fixup(ea, fixuptype, fixupflags, targetsel, targetoff, displ)
idc.set_flag(off, bit, value)
idc.set_frame_size(ea, lvsize, frregs, argsize)
idc.set_func_attr(ea, attr, value)
idc.set_func_cmt(ea, cmt, repeatable)
idc.set_func_flags(ea, flags)
idc.set_hash_long(hash_id, key, value)
idc.set_hash_string(hash_id, key, value)
idc.set_inf_attr(attr, value)
idc.set_local_type(ordinal, input, flags)
idc.set_member_cmt(sid, member_offset, comment, repeatable)
idc.set_member_name(sid, member_offset, name)
idc.set_member_type(sid, member_offset, flag, typeid, nitems, target, tdelta, reftype)
idc.set_name(ea, name, flags)
idc.set_reg_value(value, name)
idc.set_segm_addressing(ea, bitness)
idc.set_segm_alignment(ea, alignment)
idc.set_segm_attr(segea, attr, value)
idc.set_segm_class(ea, segclass)
idc.set_segm_combination(segea, comb)
idc.set_segm_name(ea, name)
idc.set_segm_type(segea, segtype)
idc.set_segment_bounds(ea, startea, endea, flags)
idc.set_struc_idx(sid, index)
idc.set_tail_owner(tailea, funcea)
idc.split_sreg_range(ea, reg, value, tag)
idc.strlen(s)
idc.strstr(s1, s2)
idc.substr(s, x1, x2)
idc.to_ea(seg, off)
idc.toggle_bnot(ea, n)
idc.update_hidden_range(ea, visible)
idc.validate_idb_names(do_repair)
idc.value_is_float(var)
idc.value_is_func(var)
idc.value_is_int64(var)
idc.value_is_long(var)
idc.value_is_pvoid(var)
idc.value_is_string(var)
idc.write_dbg_memory(ea, data)
idc.writelong(handle, dword, mostfirst)
idc.writeshort(handle, word, mostfirst)
idc.writestr(handle, s)
idc.xtol(s)
